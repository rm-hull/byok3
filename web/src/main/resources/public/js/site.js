"use strict";

String.prototype.replaceAll = function(search, replacement) {
    var target = this;
    return target.replace(new RegExp(search, 'g'), replacement);
};

function busy(enable) {
  var elem = document.getElementById('busy')
  elem.className = enable ? 'blink' : 'hide';
}

function sendCommand(text, cb) {
  var xhr = new XMLHttpRequest();

  xhr.open('POST', '/byok3', true);
  xhr.setRequestHeader('Accept', 'text/plain');
  xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
  xhr.onload = function() {
    cb(null, xhr.responseText);
  };
  xhr.onerror = function(e) {
    cb("Unknown error occured: server response not received.", null);
  };

  xhr.send(text);
}

hterm.defaultStorage = new lib.Storage.Local();
var input = '';
var t = new hterm.Terminal();
t.onTerminalReady = function() {
  var io = t.io.push();

  io.onVTKeystroke = function(str) {
    if (str.charCodeAt(0) === 13) {
      t.io.println('');
      busy(true);
      sendCommand(input, function(err, result) {
        console.log(result);
        t.io.print((result || err).replaceAll('\n', '\r\n'));
        busy(false);
      });
      input = "";
    } else {
      t.io.print(str);
      input += str;
    }
  };

  io.sendString = function(str) {
    // Just like a keystroke, except str was generated by the terminal itself.
    // For example, when the user pastes a string.
    // Most likely you'll do the same thing as onVTKeystroke.
    console.log("sendString: " + str)
  };

  sendCommand('', function(err, result) {
    t.io.print((result || err).replaceAll('\n', '\r\n'));
    busy(false);
  });
};

t.decorate(document.querySelector('#terminal'));
t.installKeyboard();